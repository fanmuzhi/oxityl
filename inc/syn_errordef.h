#pragma once

#include <stdint.h>
#include <string>
using namespace std;

//FT status:
#define SYN_M5_OK											0
#define SYN_M5_INVALID_HANDLE								0x2001
#define SYN_M5_DEVICE_NOT_FOUND								0x2002
#define SYN_M5_DEVICE_NOT_OPENED							0x2003
#define SYN_M5_IO_ERROR										0x2004
#define SYN_M5_INSUFFICIENT_RESOURCES						0x2005
#define SYN_M5_INVALID_PARAMETER							0x2006
#define SYN_M5_INVALID_BAUD_RATE							0x2007
#define SYN_M5_DEVICE_NOT_OPENED_FOR_ERASE					0x2008
#define SYN_M5_DEVICE_NOT_OPENED_FOR_WRIT					0x2009
#define SYN_M5_FAILED_TO_WRITE_DEVICE						0x200A
#define SYN_M5_EEPROM_READ_FAILED							0x200B
#define SYN_M5_EEPROM_WRITE_FAILED							0x200C
#define SYN_M5_EEPROM_ERASE_FAILED							0x200D
#define SYN_M5_EEPROM_NOT_PRESENT							0x200E
#define SYN_M5_EEPROM_NOT_PROGRAMMED						0x200F
#define SYN_M5_INVALID_ARGS									0x2010
#define SYN_M5_NOT_SUPPORTED								0x2011
#define SYN_M5_OTHER_ERROR									0x2012
#define SYN_M5_DEVICE_LIST_NOT_READY						0x2013
#define SYN_M5_OUTPUT_VOLTAGE_OUT_OF_RANGE					0x2014
#define SYN_M5_SET_INA226_REGISTER_FAILED					0x2015
#define SYN_M5_SET_GPIO_FAILED								0x2016

//mpc04 status
#define SYN_MPC04_ERR_OK                                    0
#define SYN_MPC04_ERR_INITIALIZATION_FAILED                 0x3001
#define SYN_MPC04_ERR_DEINITIALIZATION_FAILED               0x3002
#define SYN_MPC04_ERR_GET_DEVICE_NUMBER_FAILED              0x3003
#define SYN_MPC04_ERR_GET_DEVICE_HANDLE_FAILED              0x3004
#define SYN_MPC04_ERR_COMMUNICATION_INITIALIZE_FAILED       0x3005
#define SYN_MPC04_ERR_COMMUNICATION_FAILED                  0x3006
#define SYN_MPC04_ERR_FILE_NAME_TOO_LONG                    0x3007
#define SYN_MPC04_ERR_OPEN_LOCAL_FILE_FAILED                0x3008
#define SYN_MPC04_ERR_INVALID_FILE_INFORMATION              0x3009
#define SYN_MPC04_ERR_SCRIPT_CONVERT_FAILED                 0x300a
#define SYN_MPC04_ERR_LOAD_PYTHON_MODULE_FAILED             0x300b
#define SYN_MPC04_ERR_PYTHON_VERSION_NOT_MATCH              0x300c
#define SYN_MPC04_ERR_INVALID_DEVICE_HANDLE                 0x300d
#define SYN_MPC04_ERR_DEVICE_NOT_CONNECTED                  0x300e
#define SYN_MPC04_ERR_INSUFICIENT_SCRIPT_DATA               0x300f
#define SYN_MPC04_ERR_FILE_NOT_FOUND                        0x3010
#define SYN_MPC04_ERR_NOT_INITIALIZED                       0x3011
#define SYN_MPC04_ERR_COMMAND_VALIDATION_FAILED             0x3012
#define SYN_MPC04_ERR_SET_ABORT_UPDATE_FIRMWARE_FAILED      0x3013
#define SYN_MPC04_ERR_UPDATE_FIRMWARE_ABORTED               0x3014
#define SYN_MPC04_ERR_INSUFFICIENT_SCRIPT_OUTPUT_BUFFER     0x3015
#define SYN_MPC04_ERR_ARG_LIST_TOO_LONG                     0x3016
#define SYN_MPC04_ERR_SCRIPT_EXE_FAILED                     0x3017
#define SYN_MPC04_ERR_HID_NULL_REPORT_DESC                  0x3018
#define SYN_MPC04_ERR_HID_LENGTH_FAILED                     0x3019
#define SYN_MPC04_ERR_HID_TABLE_FAILED                      0x301a
#define SYN_MPC04_ERR_HID_VALUE_RANGE_FAILED                0x301b
#define SYN_MPC04_ERR_HID_ENUM_FAILED                       0x301c
#define SYN_MPC04_ERR_HID_SWITCH_MODE_FAILED                0x301d
#define SYN_MPC04_ERR_HID_REPORT_UNAVAILABLE                0x301e
#define SYN_MPC04_ERR_FP_COMMAND_FAILED                     0x301f
#define SYN_MPC04_ERR_FP_INVALID_SENSOR_TYPE                0x3020
#define SYN_MPC04_ERR_FP_INVALID_PARAMS                     0x3021
#define SYN_MPC04_ERR_PARAM_VLIDATION_FAILED                0x3ffe
#define SYN_MPC04_ERR_NOT_IMPLEMENTED                       0x3fff

// 0x4000 represents for sensor command error

#define SYN_ERROR_DEVIVENUMBER_NULL							0x5001
#define SYN_ERROR_DEVICE_UNKNOWN							0x5002
#define SYN_ERROR_DEVICE_INIT_FAILED						0x5003
#define SYN_ERROR_DEVICE_WRONG_HANDLE						0x5004
#define SYN_ERROR_OTHER_ERROR								0x5005

/*
string errorlookup(uint32_t errorcode)
{
	string strErrMessage("unknown errorcode");
	switch (errorcode)
	{
		//general
		case 0:
			return "SYN_OK";

		//FT status
		case SYN_M5_INVALID_HANDLE:
			return "SYN_M5_INVALID_HANDLE";
		case SYN_M5_DEVICE_NOT_FOUND:
			return "SYN_M5_DEVICE_NOT_FOUND";
		case SYN_M5_DEVICE_NOT_OPENED:
			return "SYN_M5_DEVICE_NOT_OPENED";
		case SYN_M5_IO_ERROR:
			return "SYN_M5_IO_ERROR";
		case SYN_M5_INSUFFICIENT_RESOURCES:
			return "SYN_M5_INSUFFICIENT_RESOURCES";
		case SYN_M5_INVALID_PARAMETER:
			return "SYN_M5_INVALID_PARAMETER";
		case SYN_M5_INVALID_BAUD_RATE:
			return "SYN_M5_INVALID_BAUD_RATE";
		case SYN_M5_DEVICE_NOT_OPENED_FOR_ERASE:
			return "SYN_M5_DEVICE_NOT_OPENED_FOR_ERASE";
		case SYN_M5_DEVICE_NOT_OPENED_FOR_WRIT:
			return "SYN_M5_DEVICE_NOT_OPENED_FOR_WRIT";
		case SYN_M5_FAILED_TO_WRITE_DEVICE:
			return "SYN_M5_FAILED_TO_WRITE_DEVICE";
		case SYN_M5_EEPROM_READ_FAILED:
			return "SYN_M5_EEPROM_READ_FAILED";
		case SYN_M5_EEPROM_WRITE_FAILED:
			return "SYN_M5_EEPROM_WRITE_FAILED";
		case SYN_M5_EEPROM_ERASE_FAILED:
			return "SYN_M5_EEPROM_ERASE_FAILED";
		case SYN_M5_EEPROM_NOT_PRESENT:
			return "SYN_M5_EEPROM_NOT_PRESENT";
		case SYN_M5_EEPROM_NOT_PROGRAMMED:
			return "SYN_M5_EEPROM_NOT_PROGRAMMED";
		case SYN_M5_INVALID_ARGS:
			return "SYN_M5_INVALID_ARGS";
		case SYN_M5_NOT_SUPPORTED:
			return "SYN_M5_NOT_SUPPORTED";
		case SYN_M5_OTHER_ERROR:
			return "SYN_M5_OTHER_ERROR";
		case SYN_M5_DEVICE_LIST_NOT_READY:
			return "SYN_M5_DEVICE_LIST_NOT_READY";

		//mpc04 status
		case SYN_MPC04_ERR_INITIALIZATION_FAILED:
			return "SYN_MPC04_ERR_INITIALIZATION_FAILED";
		case SYN_MPC04_ERR_DEINITIALIZATION_FAILED:
			return "SYN_MPC04_ERR_DEINITIALIZATION_FAILED";
		case SYN_MPC04_ERR_GET_DEVICE_NUMBER_FAILED:
			return "SYN_MPC04_ERR_GET_DEVICE_NUMBER_FAILED";
		case SYN_MPC04_ERR_GET_DEVICE_HANDLE_FAILED:
			return "SYN_MPC04_ERR_GET_DEVICE_HANDLE_FAILED";
		case SYN_MPC04_ERR_COMMUNICATION_INITIALIZE_FAILED:
			return "SYN_MPC04_ERR_COMMUNICATION_INITIALIZE_FAILED";
		case SYN_MPC04_ERR_COMMUNICATION_FAILED:
			return "SYN_MPC04_ERR_COMMUNICATION_FAILED";
		case SYN_MPC04_ERR_FILE_NAME_TOO_LONG:
			return "SYN_MPC04_ERR_FILE_NAME_TOO_LONG";
		case SYN_MPC04_ERR_OPEN_LOCAL_FILE_FAILED:
			return "SYN_MPC04_ERR_OPEN_LOCAL_FILE_FAILED";
		case SYN_MPC04_ERR_INVALID_FILE_INFORMATION:
			return "SYN_MPC04_ERR_INVALID_FILE_INFORMATION";
		case SYN_MPC04_ERR_SCRIPT_CONVERT_FAILED:
			return "SYN_MPC04_ERR_SCRIPT_CONVERT_FAILED";
		case SYN_MPC04_ERR_LOAD_PYTHON_MODULE_FAILED:
			return "SYN_MPC04_ERR_LOAD_PYTHON_MODULE_FAILED";
		case SYN_MPC04_ERR_PYTHON_VERSION_NOT_MATCH:
			return "SYN_MPC04_ERR_PYTHON_VERSION_NOT_MATCH";
		case SYN_MPC04_ERR_INVALID_DEVICE_HANDLE:
			return "SYN_MPC04_ERR_INVALID_DEVICE_HANDLE";
		case SYN_MPC04_ERR_DEVICE_NOT_CONNECTED:
			return "SYN_MPC04_ERR_DEVICE_NOT_CONNECTED";
		case SYN_MPC04_ERR_INSUFICIENT_SCRIPT_DATA:
			return "SYN_MPC04_ERR_INSUFICIENT_SCRIPT_DATA";
		case SYN_MPC04_ERR_FILE_NOT_FOUND:
			return "SYN_MPC04_ERR_FILE_NOT_FOUND";
		case SYN_MPC04_ERR_NOT_INITIALIZED:
			return "SYN_MPC04_ERR_NOT_INITIALIZED";
		case SYN_MPC04_ERR_COMMAND_VALIDATION_FAILED:
			return "SYN_MPC04_ERR_COMMAND_VALIDATION_FAILED";
		case SYN_MPC04_ERR_SET_ABORT_UPDATE_FIRMWARE_FAILED:
			return "SYN_MPC04_ERR_SET_ABORT_UPDATE_FIRMWARE_FAILED";
		case SYN_MPC04_ERR_UPDATE_FIRMWARE_ABORTED:
			return "SYN_MPC04_ERR_UPDATE_FIRMWARE_ABORTED";
		case SYN_MPC04_ERR_INSUFFICIENT_SCRIPT_OUTPUT_BUFFER:
			return "SYN_MPC04_ERR_INSUFFICIENT_SCRIPT_OUTPUT_BUFFER";
		case SYN_MPC04_ERR_ARG_LIST_TOO_LONG:
			return "SYN_MPC04_ERR_ARG_LIST_TOO_LONG";
		case SYN_MPC04_ERR_SCRIPT_EXE_FAILED:
			return "SYN_MPC04_ERR_SCRIPT_EXE_FAILED";
		case SYN_MPC04_ERR_HID_NULL_REPORT_DESC:
			return "SYN_MPC04_ERR_HID_NULL_REPORT_DESC";
		case SYN_MPC04_ERR_HID_LENGTH_FAILED:
			return "SYN_MPC04_ERR_HID_LENGTH_FAILED";
		case SYN_MPC04_ERR_HID_TABLE_FAILED:
			return "SYN_MPC04_ERR_HID_TABLE_FAILED";
		case SYN_MPC04_ERR_HID_VALUE_RANGE_FAILED:
			return "SYN_MPC04_ERR_HID_VALUE_RANGE_FAILED";
		case SYN_MPC04_ERR_HID_ENUM_FAILED:
			return "SYN_MPC04_ERR_HID_ENUM_FAILED";
		case SYN_MPC04_ERR_HID_SWITCH_MODE_FAILED:
			return "SYN_MPC04_ERR_HID_SWITCH_MODE_FAILED";
		case SYN_MPC04_ERR_HID_REPORT_UNAVAILABLE:
			return "SYN_MPC04_ERR_HID_REPORT_UNAVAILABLE";
		case SYN_MPC04_ERR_FP_COMMAND_FAILED:
			return "SYN_MPC04_ERR_FP_COMMAND_FAILED";
		case SYN_MPC04_ERR_FP_INVALID_SENSOR_TYPE:
			return "SYN_MPC04_ERR_FP_INVALID_SENSOR_TYPE";
		case SYN_MPC04_ERR_FP_INVALID_PARAMS:
			return "SYN_MPC04_ERR_FP_INVALID_PARAMS";
		case SYN_MPC04_ERR_PARAM_VLIDATION_FAILED:
			return "SYN_MPC04_ERR_PARAM_VLIDATION_FAILED";
		case SYN_MPC04_ERR_NOT_IMPLEMENTED:
			return "SYN_MPC04_ERR_NOT_IMPLEMENTED";
		case SYN_MPC04_ERR_MAX:
			return "SYN_MPC04_ERR_MAX";

		//devicemanange error
		case SYN_ERROR_DEVIVENUMBER_NULL:
			return "SYN_ERROR_DEVIVENUMBER_NULL";
		case SYN_ERROR_DEVICE_UNKNOWN:
			return "SYN_ERROR_DEVICE_UNKNOWN";
		case SYN_ERROR_OTHER_ERROR:
			return "SYN_ERROR_OTHER_ERROR";

		//fp_module error:

		//unknown error type
		default:
			break;
	}

	return strErrMessage;
}*/